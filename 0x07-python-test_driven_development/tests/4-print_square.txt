======================
4-print_square module
======================
Function
========
Function to say the name, with first name and last name these must be string, otherwise
raise a TypeError exception.

Import module:
======================

    >>> print_square = __import__('4-print_square').print_square

======================
Should print the square:
	>>> size = 8
    >>> print_square(size)
    ########
    ########
    ########
    ########
    ########
    ########
    ########
    ########

Should print the square:
	>>> size = 2 + 4 - 3
    >>> print_square(size)
    ###
    ###
    ###

Should print no square, but execute normally:
	>>> size = 0
    >>> print_square(0)

Should raise an exception TypeError for no arguments:
    >>> print_square()
    Traceback (most recent call last):
    ...
    TypeError: print_square() missing 1 required positional argument: 'size'

Should raise an exception TypeError for more than one argument:
    >>> print_square(1, 3, 3)
    Traceback (most recent call last):
    ...
    TypeError: print_square() takes 1 positional argument but 3 were given

Should raise an exception TypeError for argument tuple:
    >>> print_square((2, 3))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Should raise an exception TypeError for size different to int:
    >>> print_square("13")
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Should raise an exception TypeError for infinite float:
    >>> print_square(float('inf'))
    Traceback (most recent call last):
    ...
    TypeError: 'float' object cannot be interpreted as an integer

Should raise an exception TypeError for complex number:
    >>> print_square(1 + 7j)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Should raise an exception ValueError for negative size:
    >>> print_square(-2)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

Should raise an exception ValueError for negative size:
    >>> print_square(float('nan'))
    Traceback (most recent call last):
    ...
    TypeError: 'float' object cannot be interpreted as an integer

Should print the square:
	>>> size = 0x08
    >>> print_square(size)
    ########
    ########
    ########
    ########
    ########
    ########
    ########
    ########